{
	"name": "dataflow_4_filterandsort",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "az_SQLDB_dbo_greentaxi",
						"type": "DatasetReference"
					},
					"name": "sourceassqldb"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "az_sql_ADLS_data_movement",
						"type": "DatasetReference"
					},
					"name": "destinationadls"
				}
			],
			"transformations": [
				{
					"name": "filterTripDay4"
				},
				{
					"name": "sortbyTripDistance"
				}
			],
			"scriptLines": [
				"source(output(",
				"          VendorID as integer,",
				"          PassengerCount as integer,",
				"          TripDistance as float,",
				"          PickupTime as timestamp,",
				"          DropTime as timestamp,",
				"          PickupLocationId as string,",
				"          DropLocationId as string,",
				"          TotalAmount as float,",
				"          PaymentType as string,",
				"          TripYear as integer,",
				"          TripMonth as integer,",
				"          TripDay as integer,",
				"          TripTimeInMinutes as double,",
				"          TripType as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     partitionBy('hash', 1)) ~> sourceassqldb",
				"sourceassqldb filter(TripDistance>=9.73 && TripDay==4,",
				"     partitionBy('hash', 1)) ~> filterTripDay4",
				"filterTripDay4 sort(asc(TripDistance, true),",
				"     caseInsensitive: true,",
				"     partitionBy('hash', 1)) ~> sortbyTripDistance",
				"sortbyTripDistance sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> destinationadls"
			]
		}
	}
}